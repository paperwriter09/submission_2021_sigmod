USE GRAPH tpcds

DROP QUERY q59

CREATE QUERY q59() FOR GRAPH tpcds {
typedef Tuple<string sid,int week, double sun_sales,double mon_sales,double tue_sales,double wed_sales,double thu_sales,double fri_sales, double sat_sales> resTuple;
ListAccum<resTuple> @@result;
SumAccum<int> @week;
SumAccum<string> @day;
MapAccum<int, string> @@sid;
MapAccum<int, SumAccum<int>> @@cnt1, @@cnt2;
SumAccum<double> @@r1,@@r2,@@r3,@@r4,@@r5,@@r6,@@r7;

GroupByAccum<int week,int sk,SumAccum<double> sun_sales, SumAccum<double> mon_sales, SumAccum<double> tue_sales, SumAccum<double> wed_sales, SumAccum<double> thu_sales, SumAccum<double> fri_sales, SumAccum<double> sat_sales> @@week_seq1,@@week_seq2;


Start2 = {sstore.*};
Start2 = SELECT src
         FROM Start2:src
         ACCUM @@sid += (src.s_store_sk -> src.s_store_id + "," +src.s_store_name)
         ;

Start = {date_dim.*};
attrV =  SELECT tgt
         FROM Start:src- (d_week_seq)->:tgt
         WHERE src.d_month_seq >= 1212 AND src.d_month_seq <= 1223
         ACCUM @@cnt1 += (src.d_week_seq -> 1)
         ;

tupleV = SELECT tgt
         FROM attrV:src- (d_week_seq)->:tgt
         ;

attrd1 = SELECT tgt
          FROM tupleV:src- (d_date_sk)->:tgt
          ACCUM tgt.@day = src.d_day_name, tgt.@week = src.d_week_seq
          ;

attrV =  SELECT tgt
         FROM Start:src- (d_week_seq)->:tgt
         WHERE src.d_month_seq >= 1224 AND src.d_month_seq <= 1235
         ACCUM @@cnt2 += (src.d_week_seq -> 1)
         ;

tupleV = SELECT tgt
         FROM attrV:src- (d_week_seq)->:tgt
         ;

attrd2 = SELECT tgt
        FROM tupleV:src- (d_date_sk)->:tgt
        ACCUM tgt.@day = src.d_day_name, tgt.@week = src.d_week_seq
       ;


attr = SELECT src
       FROM attrd1:src- (ss_sold_date_sk)->:tgt
       WHERE tgt.ss_sales_price > -1000000.0 AND tgt.outdegree("ss_store_sk") > 0
       ACCUM CASE WHEN src.@day == "Sunday" THEN @@week_seq1 += (src.@week, tgt.ss_store_sk -> tgt.ss_sales_price,0,0,0,0,0,0)
                  WHEN src.@day == "Monday" THEN @@week_seq1 += (src.@week, tgt.ss_store_sk -> 0,tgt.ss_sales_price,0,0,0,0,0)
                  WHEN src.@day == "Tuesday" THEN @@week_seq1 += (src.@week, tgt.ss_store_sk -> 0,0,tgt.ss_sales_price,0,0,0,0)
                  WHEN src.@day == "Wednesday" THEN @@week_seq1 +=(src.@week, tgt.ss_store_sk -> 0,0,0,tgt.ss_sales_price,0,0,0)
                  WHEN src.@day == "Thursday" THEN @@week_seq1 += (src.@week, tgt.ss_store_sk -> 0,0,0,0,tgt.ss_sales_price,0,0)
                  WHEN src.@day == "Friday" THEN @@week_seq1 += (src.@week, tgt.ss_store_sk -> 0,0,0,0,0,tgt.ss_sales_price,0)
                  ELSE @@week_seq1 += (src.@week, tgt.ss_store_sk -> 0,0,0,0,0,0,tgt.ss_sales_price)
              END 
         ;

attr = SELECT src
       FROM attrd2:src- (ss_sold_date_sk)->:tgt
       WHERE tgt.ss_sales_price > -1000000.0 AND tgt.outdegree("ss_store_sk") > 0
       ACCUM CASE WHEN src.@day == "Sunday" THEN @@week_seq2 += (src.@week, tgt.ss_store_sk -> tgt.ss_sales_price,0,0,0,0,0,0)
                  WHEN src.@day == "Monday" THEN @@week_seq2 += (src.@week, tgt.ss_store_sk -> 0,tgt.ss_sales_price,0,0,0,0,0)
                  WHEN src.@day == "Tuesday" THEN @@week_seq2 += (src.@week, tgt.ss_store_sk -> 0,0,tgt.ss_sales_price,0,0,0,0)
                  WHEN src.@day == "Wednesday" THEN @@week_seq2 +=(src.@week, tgt.ss_store_sk -> 0,0,0,tgt.ss_sales_price,0,0,0)
                  WHEN src.@day == "Thursday" THEN @@week_seq2 += (src.@week, tgt.ss_store_sk -> 0,0,0,0,tgt.ss_sales_price,0,0)
                  WHEN src.@day == "Friday" THEN @@week_seq2 += (src.@week, tgt.ss_store_sk -> 0,0,0,0,0,tgt.ss_sales_price,0)
                  ELSE @@week_seq2 += (src.@week, tgt.ss_store_sk -> 0,0,0,0,0,0,tgt.ss_sales_price)
              END 
         ;

FOREACH (k1,k2,v1,v2,v3,v4,v5,v6,v7) IN @@week_seq2 DO
  FOREACH (kk1,kk2,vv1,vv2,vv3,vv4,vv5,vv6,vv7) IN @@week_seq1 DO
    IF kk1 == k1-52 AND @@sid.get(kk2) == @@sid.get(k2) THEN 
       FOREACH i IN RANGE [1, @@cnt1.get(kk1)*@@cnt2.get(k1)] DO
         CASE WHEN vv1 != 0 AND v1 != 0 THEN @@r1 = vv1/v1; ELSE @@r1=0; END;
         CASE WHEN vv2 != 0 AND v2 != 0 THEN @@r2 = vv2/v2; ELSE @@r2=0; END; 
         CASE WHEN vv3 != 0 AND v3 != 0 THEN @@r3 = vv3/v3; ELSE @@r3=0; END;
         CASE WHEN vv4 != 0 AND v4 != 0 THEN @@r4 = vv4/v4; ELSE @@r4=0; END;
         CASE WHEN vv5 != 0 AND v5 != 0 THEN @@r5 = vv5/v5; ELSE @@r5=0; END;
         CASE WHEN vv6 != 0 AND v6 != 0 THEN @@r6 = vv6/v6; ELSE @@r6=0; END;
         CASE WHEN vv7 != 0 AND v7 != 0 THEN @@r7 = vv7/v7; ELSE @@r7=0; END;
         @@result += resTuple(@@sid.get(kk2),kk1, @@r1,@@r2,@@r3,@@r4,@@r5,@@r6,@@r7);
       END;
    END;
  END;
END;


}

INSTALL QUERY q59

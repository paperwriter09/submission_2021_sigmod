//eager aggregation: agg before join
USE GRAPH tpcds

DROP QUERY q74_0

CREATE QUERY q74_0() FOR GRAPH tpcds {
SetAccum<int> @@first, @@all;
SumAccum<double> @ss_first, @ss_sec, @ws_first, @ws_sec;
ListAccum<string> @@result;

Start = {date_dim.*};

attrV = SELECT tgt
	      FROM Start:src- (d_date_sk)->:tgt
	      WHERE src.d_year == 2001 OR src.d_year == 2002
	      ACCUM CASE WHEN src.d_year == 2001 THEN @@first += src.d_date_sk END
                , @@all += src.d_date_sk
           ;

tuple_ws = SELECT tgt
           FROM attrV:src- (ws_sold_date_sk)->:tgt
         ;

attr_ws = SELECT tgt
          FROM tuple_ws:src- (ws_bill_customer_sk)->:tgt
          WHERE src.ws_net_paid > -1000000.0
          ACCUM CASE WHEN @@first.contains(src.ws_sold_date_sk) THEN tgt.@ws_first += src.ws_net_paid
                     ELSE tgt.@ws_sec += src.ws_net_paid
                END
          HAVING tgt.@ws_first > 0 AND tgt.@ws_sec != 0
          ;

attr_ss = SELECT src
          FROM attr_ws:src- (ss_customer_sk)->:tgt
          WHERE @@all.contains(tgt.ss_sold_date_sk) AND tgt.ss_net_paid > -1000000.0
          ACCUM CASE WHEN  @@first.contains(tgt.ss_sold_date_sk) THEN src.@ss_first += tgt.ss_net_paid
                     ELSE src.@ss_sec += tgt.ss_net_paid
                END
          HAVING src.@ss_first > 0 AND src.@ss_sec != 0
          ;


attr_ss = SELECT src
         FROM attr_ss:src- (c_customer_sk)->:tgt
         WHERE (src.@ws_sec/src.@ws_first) > (src.@ss_sec/src.@ss_first)
         ACCUM @@result += tgt.c_customer_id + "," + tgt.c_first_name + "," + tgt.c_last_name 
         ;


}

INSTALL QUERY q74_0

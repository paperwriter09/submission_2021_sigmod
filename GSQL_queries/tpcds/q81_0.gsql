USE GRAPH tpcds

DROP QUERY q81_0

CREATE QUERY q81_0() FOR GRAPH tpcds {
typedef Tuple<customer int, state string> srTuple;
typedef Tuple<string cid, string salut, string fname, string lname, string ca, double creturn> resTuple;
ListAccum<resTuple> @result;
MapAccum<srTuple, SumAccum<double>> @@ctr;
MapAccum<string, AvgAccum> @@avg_ctr;
SumAccum<string> @addr;
SetAccum<string> @cnt_state;
SetAccum<int> @@camap;
MapAccum<int, string> @@state;

//Reduction
Start2 = {customer_address.*};

Start2 = SELECT src
        FROM Start2:src
        WHERE src.ca_state != "NULL"
        ACCUM @@state += (src.ca_address_sk -> src.ca_state),
              CASE WHEN src.ca_state == "GA" THEN @@camap += src.ca_address_sk END
        ;

Start = {date_dim.*};

    attrV (ANY) = SELECT tgt
                  FROM Start:src - (d_date_sk)->:tgt
                  WHERE src.d_year == 2000
                  ;

    tupleV (ANY) = SELECT tgt
                   FROM attrV:src - (cr_returned_date_sk)->:tgt
                   WHERE @@state.containsKey(tgt.cr_returning_addr_sk) AND tgt.cr_return_amt_inc_tax > -1000000.0
                   ACCUM @@ctr += (srTuple(tgt.cr_returning_customer_sk,@@state.get(tgt.cr_returning_addr_sk)) -> tgt.cr_return_amt_inc_tax)
            ;
 
   FOREACH (k,v) in @@ctr DO
       @@avg_ctr += (k.state -> v);
   END;


   attrV = SELECT tgt
           FROM tupleV:src-(cr_returning_customer_sk)->:tgt
           WHERE @@ctr.get(srTuple(src.cr_returning_customer_sk,@@state.get(src.cr_returning_addr_sk))) > 1.2*@@avg_ctr.get(@@state.get(src.cr_returning_addr_sk))
           ACCUM tgt.@cnt_state += @@state.get(src.cr_returning_addr_sk)
           ;

    tupleV  = SELECT tgt
              FROM attrV:src-(c_customer_sk)->:tgt
              WHERE @@camap.contains(tgt.c_current_addr_sk)
              ACCUM tgt.@cnt_state = src.@cnt_state
              ;

   attrV = SELECT tgt
            FROM tupleV:src-(c_current_addr_sk)->:tgt
            ;

  attrV = SELECT src
          FROM attrV:src-(ca_address_sk)->:tgt
          ACCUM src.@addr += tgt.ca_street_number + "," + tgt.ca_street_name + ","
                             + tgt.ca_street_type + "," + tgt.ca_suite_number + "," + tgt.ca_city + "," + tgt.ca_county + ","
                             + tgt.ca_state + "," + tgt.ca_zip + "," + tgt.ca_country + "," + to_string(tgt.ca_gmt_offset) + "," + tgt.ca_location_type
          ;


  tupleV = SELECT src
           FROM tupleV:src-(c_current_addr_sk)->:tgt
           ACCUM FOREACH s IN src.@cnt_state DO
                   src.@result += resTuple(src.c_customer_id, src.c_salutation, src.c_first_name, src.c_last_name, tgt.@addr, @@ctr.get(srTuple(src.c_customer_sk,s)))
                  END
           ;


}

INSTALL QUERY q81_0

USE GRAPH tpcds

DROP QUERY q83_0

CREATE QUERY q83_0() FOR GRAPH tpcds {
SumAccum<int> @sr_item_qty, @cr_item_qty, @wr_item_qty;
SumAccum<double> @sr_dev, @cr_dev, @wr_dev, @avg_all;

//Reduction
Start = {date_dim.*};

    attrV (ANY) = SELECT tgt
                  FROM Start:src- (d_week_seq)->:tgt
                  WHERE src.d_date == to_datetime("2000-06-30") OR src.d_date == to_datetime("2000-09-27") OR src.d_date == to_datetime("2000-11-17")
                  ;

   tupleV (ANY) = SELECT tgt
                  FROM attrV:src- (d_week_seq)->:tgt
                  ;


   attrV = SELECT tgt
           FROM tupleV:src- (d_date_sk)->:tgt
           ;

   tupless = SELECT tgt
            FROM attrV:src - (sr_returned_date_sk)->:tgt
            ;

   tuplecs = SELECT tgt
            FROM attrV:src - (cr_returned_date_sk)->:tgt
            ;

   tuplews = SELECT tgt
            FROM attrV:src - (wr_returned_date_sk)->:tgt
            ;

//Collection

attrV = SELECT tgt
        FROM tupless:src - (sr_item_sk) -> :tgt
        ACCUM CASE WHEN src.sr_return_quantity != -1
                   THEN tgt.@sr_item_qty += src.sr_return_quantity
              END
        ;


tupleV = SELECT tgt
         FROM attrV:src - (i_item_sk) -> :tgt
         ACCUM tgt.@sr_item_qty = src.@sr_item_qty
         ;


attrss = SELECT tgt
         FROM tupleV:src - (i_item_id) -> :tgt
         ACCUM tgt.@sr_item_qty += src.@sr_item_qty
         ;

attrV = SELECT tgt
        FROM tuplecs:src - (cr_item_sk) -> :tgt
        ACCUM CASE WHEN src.cr_return_quantity != -1
                   THEN tgt.@cr_item_qty += src.cr_return_quantity
              END
        ;


tupleV = SELECT tgt
         FROM attrV:src - (i_item_sk) -> :tgt
         ACCUM tgt.@cr_item_qty = src.@cr_item_qty
         ;


attrcs = SELECT tgt
         FROM tupleV:src - (i_item_id) -> :tgt
         ACCUM tgt.@cr_item_qty += src.@cr_item_qty
         ;

attrV = SELECT tgt
        FROM tuplews:src - (wr_item_sk) -> :tgt
        ACCUM CASE WHEN src.wr_return_quantity != -1
                   THEN tgt.@wr_item_qty += src.wr_return_quantity
        END
        ;


tupleV = SELECT tgt
         FROM attrV:src - (i_item_sk) -> :tgt
         ACCUM tgt.@wr_item_qty = src.@wr_item_qty
         ;


attrws = SELECT tgt
         FROM tupleV:src - (i_item_id) -> :tgt
         ACCUM tgt.@wr_item_qty += src.@wr_item_qty
         ;

attrV = attrss INTERSECT attrcs INTERSECT attrws;
  
attrV = SELECT v
        FROM attrV:v
        ACCUM CASE WHEN v.@sr_item_qty != 0 AND v.@cr_item_qty != 0 AND v.@wr_item_qty != 0 THEN
              v.@sr_dev = v.@sr_item_qty/(v.@sr_item_qty+v.@cr_item_qty+v.@wr_item_qty)/3 * 100,
              v.@cr_dev = v.@cr_item_qty/(v.@sr_item_qty+v.@cr_item_qty+v.@wr_item_qty)/3 * 100,
              v.@wr_dev = v.@wr_item_qty/(v.@sr_item_qty+v.@cr_item_qty+v.@wr_item_qty)/3 * 100,
              v.@avg_all = (v.@sr_item_qty+v.@cr_item_qty+v.@wr_item_qty)/3
              END
              ;

}

INSTALL QUERY q83_0

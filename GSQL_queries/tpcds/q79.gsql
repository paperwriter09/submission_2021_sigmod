USE GRAPH tpcds

DROP QUERY q79

CREATE QUERY q79() FOR GRAPH tpcds {
typedef Tuple<string name, string city, int ticket, double amt, double profit> resTuple;
ListAccum<resTuple> @@result;
OrAccum @hd_filter;
SumAccum<string> @city;
MapAccum<int,string> @@name;
GroupByAccum<int ticket, int custsk, int addr, string city, SumAccum<double> amt, SumAccum<double> profit> @@ms;

//Reduction
Start2 = {household_demographics.*};

Start2 = SELECT tgt
         FROM Start2:src-(hd_demo_sk)->:tgt
         WHERE src.hd_dep_count == 6 OR src.hd_vehicle_count > 2
         ACCUM tgt.@hd_filter = true
         ;

Start3 = {sstore.*};

Start3 = SELECT tgt
         FROM Start3:src-(s_store_sk)->:tgt
         WHERE src.s_number_employees >= 200 AND src.s_number_employees <= 295
         ACCUM tgt.@city = src.s_city
         ;

Start = {date_dim.*};

attrV = SELECT tgt
	    FROM Start:src- (d_date_sk)->:tgt
	    WHERE (src.d_year == 1999 OR src.d_year == 2000 OR src.d_year == 2001) AND src.d_dow == 1 
	  ;

tupleV = SELECT tgt
	     FROM attrV:src- (ss_sold_date_sk)->:tgt
     ;
     
tupleV = SELECT src
         FROM tupleV:src- (ss_hdemo_sk)->:tgt
         WHERE tgt.@hd_filter
        ;

//Collection
// only aggregating on those customer that join with customer table

tupleV = SELECT src
         FROM tupleV:src- (ss_store_sk)->:tgt
         WHERE tgt.@city != ""
         ACCUM CASE WHEN src.ss_customer_sk != -1 THEN
                 @@ms += (src.ss_ticket_number, src.ss_customer_sk, src.ss_addr_sk, tgt.@city -> src.ss_coupon_amt,src.ss_net_profit) 
               END
        ;


attrV = SELECT tgt
        FROM tupleV:src- (ss_customer_sk)->:tgt
        ;

attrV = SELECT src
        FROM attrV:src- (c_customer_sk)->:tgt
        ACCUM @@name += (src.id -> tgt.c_last_name + "," + tgt.c_first_name)
       ;

FOREACH (k1,k2,k3,k4,v1,v2) IN @@ms DO
  @@result += resTuple(@@name.get(k2),k4,k1,v1,v2);
END;

 
}

INSTALL QUERY q79
